name: toolkit-ci

on:
  push:
    branches: main
  pull_request:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💾
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies 📥
        run: yarn install

      - name: Run Tests 🧪
        run: yarn run test
        working-directory: packages/components

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💾
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies 📥
        run: yarn install

      - name: Run Lint Check 🔍
        run: yarn run lint:check

      - name: Run Format Check 🌸
        run: yarn run format:check

  build-toolkit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💾
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies 📥
        run: yarn install

      - name: Build Toolkit 🏗
        run: yarn run lerna run --scope @jupyter/web-components --scope @jupyter/react-components build

  build-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💾
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install Dependencies 📥
        run: yarn install

      - name: Build Docs 🏗
        run: yarn run build:docs
        working-directory: packages/components
